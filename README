/**
 * JBoss, Home of Professional Open Source. Copyright 2012, Red Hat, Inc., and
 * individual contributors as indicated by the @author tags. See the
 * copyright.txt file in the distribution for a full listing of individual
 * contributors.
 * 
 * This is free software; you can redistribute it and/or modify it under the
 * terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 * 
 * This software is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with this software; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA, or see the FSF
 * site: http://www.fsf.org.
 */

@author <a href="mailto:jclere@redhat.com">Jean-Frederic Clere</a>
@author <a href="mailto:nbenothm@redhat.com">Nabil Benothman</a>

This project is a prototype of a reverse proxy for JBoss Application Server 7.
The project is based on the JBossweb NIO.2 web connector. The goal of the work
is to provide a pure Java solution as an alternative to the current proxy based
on the Apache httpd.

Project requirements:
 1) JDK 7 installed which can be downloaded from oracle web site
   
    http://www.oracle.com/technetwork/java/javase/downloads/index.html
   
 2) Maven 3.x.x installed which can be installed from Maven web site
   
    http://maven.apache.org/download.html

To run the project, you can follow the steps below:

 1) Download the source code form the repository

 2) Actually, the project supports only static node configuration, so edit the
    file "conf/nodes.xml" and specify the address and the port number of each
    node. Other configurations may be specified in the files "conf/*.properties"

 3) Open a command line prompt, navigate to the project folder, and type the
    following command:
   
    install_dir/mod_cluster-proxy$ sh build.sh
   
 4) To run the application, just type the command line:
   
    install_dir/mod_cluster-proxy$ sh run.sh
   
    You can also edit the file "conf/run.conf" to modify start up configurations. 


